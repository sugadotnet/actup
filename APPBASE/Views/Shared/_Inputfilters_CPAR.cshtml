@model APPBASE.Models.FilterCPAR_DetailVM
@using APPBASE.Helpers
@using APPBASE.Svcbiz

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12 col-md-4">
        @if (ViewData.ModelState["CPAR_DT10"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CPAR_DT1">Periode tanggal awal</label>
            <input type="text" id="CPAR_DT1" name="CPAR_DT1" value="@Html.DisplayFor(model => model.CPAR_DT1)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["CPAR_DT11"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CPAR_DT11")
                    </label>
            }
            @if (ViewData.ModelState["CPAR_DT12"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CPAR_DT12")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->

    <div class="col-xs-12 col-md-4">
        @if (ViewData.ModelState["CPAR_DT20"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CPAR_DT2">Periode tanggal kedua</label>
            <input type="text" id="CPAR_DT2" name="CPAR_DT2" value="@Html.DisplayFor(model => model.CPAR_DT2)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["CPAR_DT21"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CPAR_DT21")
                    </label>
            }
            @if (ViewData.ModelState["CPAR_DT22"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CPAR_DT22")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->


<hr />

<div class="row">
    <div class="col-xs-12">
        <div class="form-group">
            <label for="CPAR_STS">Status CPAR</label>
            <select class="form-control" id="CPAR_STS" name="CPAR_STS" >
                <option value="">All</option>
                @foreach (var item in ViewBag.CPAR_STS_LOV)
                {
                    if (Model.CPAR_STS != null)
                    {
                        if (Model.CPAR_STS == item.RUID)
                        { <option value="@item.RUID" selected>@item.LOV_NM</option> }
                        else
                        { <option value="@item.RUID">@item.LOV_NM</option> }
                    }
                    else
                    { <option value="@item.RUID">@item.LOV_NM</option> }

                }
            </select>
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->


<div class="row">
    <div class="col-xs-12">
        <div class="form-group">
            <label for="CLASS_RUID">Kategori Temuan</label>
            <select class="form-control" id="CLASS_RUID" name="CLASS_RUID" >
                <option value="">All</option>
                @if (ViewBag.CLASS_RUID_LOV != null)
                {
                    if (ViewBag.CLASS_RUID_LOV.Count > 0)
                    {
                        foreach (var item in ViewBag.CLASS_RUID_LOV)
                        {
                            if (Model.CLASS_RUID != null)
                            {
                                if (Model.CLASS_RUID == item.RUID)
                                { <option value="@item.RUID" selected>@item.LOV_NM</option> }
                                else
                                { <option value="@item.RUID">@item.LOV_NM</option> }
                            }
                            else
                            { <option value="@item.RUID">@item.LOV_NM</option> }
                        }
                    }
                }
            </select>
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    @Html.HiddenFor(model => model.CPAR_TYPE, new { id = "CPAR_TYPE" })
    <div class="col-xs-12">
        <div class="form-group">
            <label for="CPAR_TYPE_NM">Sumber CPAR</label>
            <div class="input-group input-group-sm">
                <input type="text" id="CPAR_TYPE_NM" name="CPAR_TYPE_NM" value="@Html.DisplayFor(model => model.CPAR_TYPE_NM)" class="form-control" readonly />
                <span class="input-group-btn">
                    <button type="button" id="cmdLookupCPAR_TYPE_NM" name="cmdLookupCPAR_TYPE_NM" class="btn btn-info btn-flat" data-toggle="modal" data-target="#DialogLookup" @vsDisableButton><i class="fa fa-search"></i></button>
                </span>
            </div><!-- /input-group -->
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    @Html.HiddenFor(model => model.AUDIT_RUID, new { id = "AUDIT_RUID" })
    <div class="col-xs-12">
        <div class="form-group">
            <label for="AUDIT_NM">Proses Audit</label>
            <div class="input-group input-group-sm">
                <input type="text" id="AUDIT_NM" name="AUDIT_NM" value="@Html.DisplayFor(model => model.AUDIT_NM)" class="form-control" readonly />
                <span class="input-group-btn">
                    <button type="button" id="cmdLookupAUDIT_NM" name="cmdLookupAUDIT_NM" class="btn btn-info btn-flat" data-toggle="modal" data-target="#DialogLookup"><i class="fa fa-search"></i></button>
                </span>
            </div><!-- /input-group -->
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    @Html.HiddenFor(model => model.AUDITEEDEPT_RUID, new { id = "AUDITEEDEPT_RUID" })
    <div class="col-xs-12">
        <div class="form-group">
            <label for="AUDITEEDEPT_NM">Departemen Auditee</label>
            <div class="input-group input-group-sm">
                <input type="text" id="AUDITEEDEPT_NM" name="AUDITEEDEPT_NM" value="@Html.DisplayFor(model => model.AUDITEEDEPT_NM)" class="form-control" readonly />
                <span class="input-group-btn">
                    <button type="button" id="cmdLookupAUDITEEDEPT_NM" name="cmdLookupAUDITEEDEPT_NM" class="btn btn-info btn-flat" data-toggle="modal" data-target="#DialogLookup"><i class="fa fa-search"></i></button>
                </span>
            </div><!-- /input-group -->
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
