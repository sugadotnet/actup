@model APPBASE.Models.Audit_DetailVM
@using APPBASE.Helpers
@using APPBASE.Svcbiz

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    @Html.HiddenFor(model => model.DEPT_RUID, new { id = "DEPT_RUID" })
    <div class="col-xs-12">
        @if (ViewData.ModelState["DEPT_RUID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="DEPT_NM">Departemen</label>


            <div class="input-group input-group-sm">
                <input type="text" id="DEPT_NM" name="DEPT_NM" value="@Html.DisplayFor(model => model.DEPT_NM)" class="form-control" readonly />
                <span class="input-group-btn">
                    <button type="button" id="cmdLookupDEPT_NM" name="cmdLookupDEPT_NM" class="btn btn-info btn-flat" data-toggle="modal" data-target="#DialogLookup" @vsDisableButton><i class="fa fa-search"></i></button>
                </span>
            </div><!-- /input-group -->

            
            @if (ViewData.ModelState["DEPT_RUID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("DEPT_RUID1")
                    </label>
            }
            @if (ViewData.ModelState["DEPT_RUID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("DEPT_RUID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["LOV_NM0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="LOV_NM">Proses Audit [Max: @valFLAG.FLAG_MAXLENGTH_NM Character]</label>
            <input type="text" id="LOV_NM" name="LOV_NM" value="@Html.DisplayFor(model => model.LOV_NM)" class="form-control" maxlength="@valFLAG.FLAG_MAXLENGTH_NM" @vsReadonlyTextbox />

            @if (ViewData.ModelState["LOV_NM1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("LOV_NM1")
                    </label>
            }
            @if (ViewData.ModelState["LOV_NM2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("LOV_NM2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

